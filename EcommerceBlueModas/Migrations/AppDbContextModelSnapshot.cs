// <auto-generated />
using System;
using EcommerceBlueModas.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EcommerceBlueModas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("EcommerceBlueModas.Models.Cesta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("clienteid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.ToTable("Cesta");
                });

            modelBuilder.Entity("EcommerceBlueModas.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<string>("telefone")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("EcommerceBlueModas.Models.Pedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("clienteid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("clienteid");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("EcommerceBlueModas.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int?>("Cestaid")
                        .HasColumnType("integer");

                    b.Property<int?>("Pedidoid")
                        .HasColumnType("integer");

                    b.Property<string>("categoria")
                        .HasColumnType("text");

                    b.Property<string>("cor")
                        .HasColumnType("text");

                    b.Property<string>("descricao")
                        .HasColumnType("text");

                    b.Property<int>("quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("tamanho")
                        .HasColumnType("integer");

                    b.Property<string>("titulo")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Cestaid");

                    b.HasIndex("Pedidoid");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("EcommerceBlueModas.Models.Cesta", b =>
                {
                    b.HasOne("EcommerceBlueModas.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteid");

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("EcommerceBlueModas.Models.Pedido", b =>
                {
                    b.HasOne("EcommerceBlueModas.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteid");

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("EcommerceBlueModas.Models.Produto", b =>
                {
                    b.HasOne("EcommerceBlueModas.Models.Cesta", null)
                        .WithMany("produtos")
                        .HasForeignKey("Cestaid");

                    b.HasOne("EcommerceBlueModas.Models.Pedido", null)
                        .WithMany("produtos")
                        .HasForeignKey("Pedidoid");
                });

            modelBuilder.Entity("EcommerceBlueModas.Models.Cesta", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("EcommerceBlueModas.Models.Pedido", b =>
                {
                    b.Navigation("produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
